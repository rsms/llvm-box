#!/bin/bash
set -e
source "$(dirname "$0")/config.sh"
# source "$(dirname "$0")/config-mac.sh"

EXTRA_CMAKE_ARGS=()

command -v xcrun >/dev/null &&
  EXTRA_CMAKE_ARGS+=( -DDEFAULT_SYSROOT="$(xcrun --show-sdk-path)" )

# [ -x "$(dirname "$HOST_CC")/clang-tblgen" ] &&
#   EXTRA_CMAKE_ARGS+=( -DCLANG_TABLEGEN=""$(dirname "$HOST_CC")"/clang-tblgen" )

[ -x "$HOST_AR" ]     && EXTRA_CMAKE_ARGS+=( -DCMAKE_AR="$HOST_AR" )
[ -x "$HOST_RANLIB" ] && EXTRA_CMAKE_ARGS+=( -DCMAKE_RANLIB="$HOST_RANLIB" )

CMAKE_C_FLAGS="-I$ZLIB_HOST/include"    ; CMAKE_LD_FLAGS="-L$ZLIB_HOST/lib"
CMAKE_C_FLAGS="-I$ZSTD_DESTDIR/include"    ; CMAKE_LD_FLAGS="-L$ZSTD_DESTDIR/lib"
CMAKE_C_FLAGS="-I$OPENSSL_DESTDIR/include" ; CMAKE_LD_FLAGS="-L$OPENSSL_DESTDIR/lib"
CMAKE_C_FLAGS="-I$XC_DESTDIR/include"      ; CMAKE_LD_FLAGS="-L$XC_DESTDIR/lib"

EXTRA_CMAKE_ARGS+=(
  -DLLVM_BUILTIN_TARGETS=default \
  -DLLVM_RUNTIME_TARGETS=default \
  \
  -DCOMPILER_RT_ENABLE_TVOS=OFF \
  -DCOMPILER_RT_ENABLE_WATCHOS=OFF \
  -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
)

# -DZSTD_LIBRARY="$ZSTD_DESTDIR/lib/libzstd.a"
# -DZSTD_INCLUDE_DIR="$ZSTD_DESTDIR/include"

# -DLLVM_ENABLE_ZSTD=ON
# -DLLVM_USE_STATIC_ZSTD=ON
# -DLLVM_PREFER_STATIC_ZSTD=ON

mkdir -p "$BUILD_DIR/llvm-macos-build"
_pushd "$BUILD_DIR/llvm-macos-build"

cmake -G Ninja -Wno-dev "$LLVM_SRC/llvm" \
  -DCMAKE_BUILD_TYPE=MinSizeRel \
  -DCMAKE_INSTALL_PREFIX= \
  -DCMAKE_OSX_DEPLOYMENT_TARGET=10.10 \
  \
  -DCMAKE_C_COMPILER="$HOST_CC" \
  -DCMAKE_CXX_COMPILER="$HOST_CXX" \
  -DCMAKE_ASM_COMPILER="$HOST_ASM" \
  \
  -DCMAKE_C_FLAGS="$CMAKE_C_FLAGS" \
  -DCMAKE_CXX_FLAGS="$CMAKE_C_FLAGS" \
  -DCMAKE_EXE_LINKER_FLAGS="$CMAKE_LD_FLAGS" \
  -DCMAKE_SHARED_LINKER_FLAGS="$CMAKE_LD_FLAGS" \
  -DCMAKE_MODULE_LINKER_FLAGS="$CMAKE_LD_FLAGS" \
  \
  -DLLVM_TARGETS_TO_BUILD="X86;ARM;AArch64;RISCV;WebAssembly" \
  -DLLVM_ENABLE_PROJECTS="clang;lld;compiler-rt" \
  -DLLVM_ENABLE_RUNTIMES="libcxx;libcxxabi;libunwind" \
  -DLLVM_ENABLE_MODULES=OFF \
  -DLLVM_ENABLE_BINDINGS=OFF \
  -DLLVM_ENABLE_LIBXML2=OFF \
  -DLLVM_ENABLE_TERMINFO=OFF \
  -DLLVM_INCLUDE_UTILS=OFF \
  -DLLVM_INCLUDE_TESTS=OFF \
  -DLLVM_INCLUDE_GO_TESTS=OFF \
  -DLLVM_INCLUDE_EXAMPLES=OFF \
  -DLLVM_INCLUDE_BENCHMARKS=OFF \
  -DLLVM_ENABLE_OCAMLDOC=OFF \
  -DLLVM_ENABLE_Z3_SOLVER=OFF \
  -DLLVM_INCLUDE_DOCS=OFF \
  \
  -DLLVM_ENABLE_ZLIB=FORCE_ON \
  -DZLIB_LIBRARY="$ZLIB_HOST/lib/libz.a" \
  -DZLIB_INCLUDE_DIR="$ZLIB_HOST/include" \
  \
  -DCLANG_INCLUDE_DOCS=OFF \
  -DCLANG_ENABLE_OBJC_REWRITER=OFF \
  -DCLANG_ENABLE_ARCMT=OFF \
  -DCLANG_ENABLE_STATIC_ANALYZER=ON \
  -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
  -DCLANG_DEFAULT_RTLIB=compiler-rt \
  -DCLANG_DEFAULT_UNWINDLIB=libunwind \
  -DCLANG_DEFAULT_LINKER=lld \
  -DCLANG_DEFAULT_OBJCOPY=llvm-objcopy \
  -DCLANG_PLUGIN_SUPPORT=OFF \
  -DLIBCLANG_BUILD_STATIC=ON \
  \
  -DLIBCXX_ABI_VERSION=2 \
  -DLIBCXX_ENABLE_STATIC=ON \
  -DLIBCXX_ENABLE_SHARED=OFF \
  -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
  -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=OFF \
  -DLIBCXX_ENABLE_RTTI=OFF \
  -DLIBCXX_ENABLE_EXCEPTIONS=OFF \
  -DLIBCXX_INCLUDE_TESTS=OFF \
  -DLIBCXX_INCLUDE_BENCHMARKS=OFF \
  -DLIBCXX_USE_COMPILER_RT=ON \
  -DLIBCXX_LINK_TESTS_WITH_SHARED_LIBCXX=OFF \
  \
  -DLIBCXXABI_ENABLE_SHARED=OFF \
  -DLIBCXXABI_INCLUDE_TESTS=OFF \
  -DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
  -DLIBCXXABI_LINK_TESTS_WITH_SHARED_LIBCXXABI=OFF \
  -DLIBCXXABI_INSTALL_LIBRARY=OFF \
  \
      -DCOMPILER_RT_BUILD_XRAY=OFF \
      -DCOMPILER_RT_CAN_EXECUTE_TESTS=OFF \
      -DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
      -DSANITIZER_USE_STATIC_CXX_ABI=ON \
      -DSANITIZER_USE_STATIC_LLVM_UNWINDER=ON \
  \
  -DRUNTIMES_CMAKE_ARGS="-DCMAKE_OSX_DEPLOYMENT_TARGET=10.10;-DCMAKE_OSX_ARCHITECTURES=arm64|x86_64" \
  \
  -DENABLE_X86_RELAX_RELOCATIONS=ON \
  "${EXTRA_CMAKE_ARGS[@]}"


ninja

rm -rf "$LLVM_DESTDIR"
mkdir -p "$LLVM_DESTDIR"
DESTDIR=$LLVM_DESTDIR ninja install-stripped
