#!/bin/bash
set -e ; source "$(dirname "$0")/config.sh"

# based on https://git.alpinelinux.org/aports/tree/main/llvm15/APKBUILD
apk add clang cmake chrpath python3 py3-setuptools samurai binutils-dev

EXTRA_CMAKE_ARGS=()

CMAKE_C_FLAGS=()
CMAKE_CXX_FLAGS=()
CMAKE_C_AND_CXX_FLAGS=()
CMAKE_STATIC_LINKER_FLAGS=() # passed to ar, not ld
CMAKE_EXE_LINKER_FLAGS=()
CMAKE_SHARED_LINKER_FLAGS=()
COMMON_LDFLAGS=() # extra for CMAKE_{EXE,SHARED}_LINKER_FLAGS

# zlib
CMAKE_C_FLAGS+=( -I"$ZLIB_HOST/include" )
CMAKE_CXX_FLAGS+=( -I"$ZLIB_HOST/include" )
COMMON_LDFLAGS+=( -L"$ZLIB_HOST/lib" )
EXTRA_CMAKE_ARGS+=( # note: LLVM_ENABLE_ZLIB must be "1", not "ON"
  -DLLVM_ENABLE_ZLIB=1 \
  -DZLIB_LIBRARY="$ZLIB_HOST/lib/libz.a" \
  -DZLIB_INCLUDE_DIR="$ZLIB_HOST/include" \
)

# libxml2
LIBXML2_DESTDIR=$BUILD_DIR/libxml2-host
CMAKE_C_FLAGS+=( -I"$LIBXML2_DESTDIR/include/libxml2" )
CMAKE_CXX_FLAGS+=( -I"$LIBXML2_DESTDIR/include/libxml2" )
COMMON_LDFLAGS+=( -L"$LIBXML2_DESTDIR/lib" )
EXTRA_CMAKE_ARGS+=(
  -DLLVM_ENABLE_LIBXML2=FORCE_ON \
  -DLIBXML2_LIBRARY="$LIBXML2_DESTDIR/lib/libxml2.a" \
  -DLIBXML2_INCLUDE_DIR="$LIBXML2_DESTDIR/include" \
)
# EXTRA_CMAKE_ARGS+=( -DLLVM_ENABLE_LIBXML2=OFF )

# zstd
ZSTD_DESTDIR=$BUILD_DIR/zstd-host
CMAKE_C_FLAGS+=( -I"$ZSTD_DESTDIR/include" )
CMAKE_CXX_FLAGS+=( -I"$ZSTD_DESTDIR/include" )
COMMON_LDFLAGS+=( -L"$ZSTD_DESTDIR/lib" )
EXTRA_CMAKE_ARGS+=(
  -DLLVM_ENABLE_ZSTD=FORCE_ON \
  -Dzstd_LIBRARY="$ZSTD_DESTDIR/lib/libzstd.a" \
  -Dzstd_INCLUDE_DIR="$ZSTD_DESTDIR/include" \
)

# XC_DESTDIR=$BUILD_DIR/xc-host

# bake flags
CMAKE_C_FLAGS="${CMAKE_C_AND_CXX_FLAGS} ${CMAKE_C_FLAGS[@]}"
CMAKE_CXX_FLAGS="${CMAKE_C_AND_CXX_FLAGS} ${CMAKE_CXX_FLAGS[@]}"
CMAKE_STATIC_LINKER_FLAGS="${CMAKE_STATIC_LINKER_FLAGS[@]}" # ar, not ld
CMAKE_EXE_LINKER_FLAGS="${CMAKE_EXE_LINKER_FLAGS[@]} ${COMMON_LDFLAGS[@]}"
CMAKE_SHARED_LINKER_FLAGS="${COMMON_LDFLAGS[@]} ${CMAKE_SHARED_LINKER_FLAGS[@]}"


DESTDIR=$BUILD_DIR/llvm-alpine

mkdir -p "$BUILD_DIR/llvm-alpine-build"
_pushd "$BUILD_DIR/llvm-alpine-build"

cmake -G Ninja -Wno-dev "$LLVM_SRC/llvm" \
  -DCMAKE_BUILD_TYPE=MinSizeRel \
  -DCMAKE_INSTALL_PREFIX="$DESTDIR" \
  -DCMAKE_INSTALL_RPATH="$DESTDIR" \
  \
  -DCMAKE_C_FLAGS="$CMAKE_C_FLAGS" \
  -DCMAKE_CXX_FLAGS="$CMAKE_CXX_FLAGS" \
  -DCMAKE_STATIC_LINKER_FLAGS="$CMAKE_STATIC_LINKER_FLAGS" \
  -DCMAKE_EXE_LINKER_FLAGS="$CMAKE_EXE_LINKER_FLAGS" \
  -DCMAKE_SHARED_LINKER_FLAGS="$CMAKE_SHARED_LINKER_FLAGS" \
  -DCMAKE_MODULE_LINKER_FLAGS="$CMAKE_SHARED_LINKER_FLAGS" \
  \
  -DLLVM_TARGETS_TO_BUILD="X86;ARM;AArch64;RISCV;WebAssembly" \
  -DLLVM_ENABLE_PROJECTS="clang;lld;compiler-rt" \
  -DLLVM_ENABLE_RUNTIMES="libcxx;libcxxabi;libunwind" \
  \
  -DLLVM_APPEND_VC_REV=OFF \
  -DLLVM_BINUTILS_INCDIR=/usr/include \
  -DLLVM_BUILD_DOCS=OFF \
  -DLLVM_BUILD_EXAMPLES=OFF \
  -DLLVM_BUILD_EXTERNAL_COMPILER_RT=ON \
  -DLLVM_BUILD_LLVM_DYLIB=OFF \
  -DLLVM_BUILD_TESTS=OFF \
  -DLLVM_STATIC_LINK_CXX_STDLIB=ON \
  -DLLVM_USE_RELATIVE_PATHS_IN_FILES=ON \
  -DLLVM_ENABLE_ASSERTIONS=OFF \
  -DLLVM_ENABLE_UNWIND_TABLES=OFF \
  -DLLVM_ENABLE_LIBCXX=ON \
  -DLLVM_ENABLE_EH=OFF \
  -DLLVM_ENABLE_RTTI=OFF \
  -DLLVM_ENABLE_FFI=OFF \
  -DLLVM_ENABLE_LIBCXX=ON \
  -DLLVM_ENABLE_PIC=ON \
  -DLLVM_ENABLE_SPHINX=OFF \
  -DLLVM_ENABLE_TERMINFO=OFF \
  -DLLVM_ENABLE_CURL=OFF \
  -DLLVM_ENABLE_ZLIB=ON \
  -DLLVM_ENABLE_ZSTD=ON \
  -DLLVM_ENABLE_LIBEDIT=OFF \
  -DLLVM_ENABLE_BINDINGS=OFF \
  -DLLVM_ENABLE_OCAMLDOC=OFF \
  -DLLVM_ENABLE_Z3_SOLVER=OFF \
  -DLLVM_INCLUDE_TESTS=OFF \
  -DLLVM_INCLUDE_GO_TESTS=OFF \
  -DLLVM_INCLUDE_EXAMPLES=OFF \
  -DLLVM_INCLUDE_BENCHMARKS=OFF \
  -DLLVM_INCLUDE_DOCS=OFF \
  -DLLVM_INSTALL_UTILS=ON \
  -DLLVM_LINK_LLVM_DYLIB=OFF \
  \
  "${EXTRA_CMAKE_ARGS[@]}"

ninja

# python3 "$LLVM_SRC"/llvm/utils/lit/setup.py build
